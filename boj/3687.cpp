#include <iostream>
using namespace std;
int TC;
int dp[101]; // 최솟값 구할 때 쓰임.
/*
1 2 3 4 5 6 7 8 9 0
2 5 5 4 5 6 3 7 6 6

1  7  4  2 3 5  0 6 9  8
2  3  4  5 5 5  6 6 6  7

최댓값은 무조건 1 전체 혹은 1과 7 하나로만 이루어질 수 밖에 없음.
11 > 4이고 11과 7은 1차이 나므로 경우에 따라서 양쪽 다 사용 가능.
나머지 값은 쓸 이유가 없음. 2 이상의 모든 정수를 2와 3의 합으로만 표현 가능하기 때문.

최솟값 어차피 쓰는 수는 
1 7 4 2 0 8 
2 3 4 5 6 7
이렇게 여섯개로 한정.
7>=N이면 한자리수 반환
14>=N>=8이면 두자릿수
21>=N>=15면 세 자릿수 이상
...


15
1 0 8
8 + 7


22
1 0 8 8
8 + 7 + 7
이후로
9 + 7 + 7
10 + 7 + 7
...
14 + 7 + 7
15 + 7 + 7부터는 5자리되므로 
8 + 7 + 7 + 7
즉 1 0 8 8 8

즉 DP로 풀 수 있다.
*/

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    
    cin >> TC;
    for (int i=0;i<TC;i++)
    {
        int N, minN, maxN;
        cin >> N;
        
        
        cout << minN << " " << maxN << '\n';
    }
    
    return 0;
}
